name: App Publish

on:
  push:
    branches:
      - main
      - release/**
    paths:
      - version.json
      - .github/workflows/app-publish.yml
      - Directory.Build.props
      - 'src/Application/**'
      - 'src/Extensions/**'
      - 'src/ClientSDK/DotNet/**'
      - 'src/Shared/**'
      - '!**/*.md'

jobs:
  build:
    runs-on: windows-latest

    env:
      IS_CI: true
      Solution_Name: SDK.sln
      App_csproj: src\Application\Raid.Toolkit\Raid.Toolkit.csproj

    steps:
      - uses: mickem/clean-after-action@v1

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set branch-based environment variables
        uses: iamtheyammer/branch-env-vars@v1.0.4
        with:
          bevOverwrite: true
          PRERELEASE: |
            main:true
            !default:false

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            5.0.x
            6.0.x

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      # Restore the application to populate the obj folder with RuntimeIdentifiers
      - name: Restore the application
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=Release

      # Publish RTK
      - name: Publish App
        run: |
          msbuild $env:Solution_Name -m -t:"Build;Pack" -p:Configuration=Release -p:Platform=x64 -p:PackageOutputPath="$(Get-Location)\publish\nuget"
          msbuild $env:App_csproj -m -t:Publish -p:TargetFramework=net6.0-windows10.0.19041.0 -p:Configuration=Release -p:Platform=x64 -p:PublishDir="$(Get-Location)\publish\RTK"

      # Versions
      - uses: dotnet/nbgv@master
        id: rtk_version
        with:
          setAllVars: true

      # Create releases
      - name: Create RaidToolkit Release
        id: rtk_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.rtk_version.outputs.Version }}
          release_name: RaidToolkit v${{ steps.rtk_version.outputs.Version }}
          body: RaidToolkit v${{ steps.rtk_version.outputs.Version }}
          draft: false
          prerelease: ${{ env.PRERELEASE }}

      - name: Upload Raid.Toolkit Asset
        id: upload-raidtoolkit-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.rtk_release.outputs.upload_url }}
          asset_path: ./publish/RTK/Raid.Toolkit.exe
          asset_name: Raid.Toolkit.exe
          asset_content_type: application/zip

      - name: Upload TPN Asset
        id: upload-tpn-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.rtk_release.outputs.upload_url }}
          asset_path: ThirdPartyNotice.txt
          asset_name: ThirdPartyNotice.txt
          asset_content_type: text/plain

      # NuGet Push
      - name: Push client package to Nuget registry
        run: |
          dotnet nuget push publish/nuget/Raid.Common.${{ steps.rtk_version.outputs.NuGetPackageVersion }}.nupkg -k $env:PUBLISH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push publish/nuget/Raid.Client.${{ steps.rtk_version.outputs.NuGetPackageVersion }}.nupkg -k $env:PUBLISH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push publish/nuget/Raid.Model.${{ steps.rtk_version.outputs.NuGetPackageVersion }}.nupkg -k $env:PUBLISH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push publish/nuget/Raid.Toolkit.DataModel.${{ steps.rtk_version.outputs.NuGetPackageVersion }}.nupkg -k $env:PUBLISH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push publish/nuget/Raid.Toolkit.Injection.${{ steps.rtk_version.outputs.NuGetPackageVersion }}.nupkg -k $env:PUBLISH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push publish/nuget/Raid.Toolkit.Extensibility.${{ steps.rtk_version.outputs.NuGetPackageVersion }}.nupkg -k $env:PUBLISH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push publish/nuget/Raid.Toolkit.Extensibility.Host.${{ steps.rtk_version.outputs.NuGetPackageVersion }}.nupkg -k $env:PUBLISH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push publish/nuget/Raid.Toolkit.Extensibility.Tasks.${{ steps.rtk_version.outputs.NuGetPackageVersion }}.nupkg -k $env:PUBLISH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
